using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Invulnerability : MonoBehaviour
{
    [SerializeField] private List<Sprite> Freeze;
    [SerializeField] private List<Sprite> Sprites;
    
    private SpriteRenderer spriteRenderer;
    private SpriteRenderer childspriteRenderer;
    public FreezeBar Freezebar;
    public GameObject childsprite;
    public int selected;
    public bool Canfreeze;
    public float currentFreeze;
    public float increasePerMinute;
    public float maxFreeze = 100;
    public float minFreeze = 0;
    public AudioSource freezeSound;
    void Start()
    {
        spriteRenderer = gameObject.GetComponent<SpriteRenderer>();
        childspriteRenderer = childsprite.GetComponent<SpriteRenderer>();
        currentFreeze = maxFreeze;
        Freezebar.SetMaxFreeze(maxFreeze);
        
    }

    private void Update()
    {
        if (currentFreeze >= 100)
        {
            Canfreeze = true;
            currentFreeze = 100;
        }
        if (currentFreeze <= 99)
        {
            Canfreeze = false;
        }
        currentFreeze += Time.deltaTime * increasePerMinute / 60f;

        if (Input.GetKeyDown("space") && Canfreeze)
        {
           
            StartCoroutine("GetInvulnerable");
            freezeSound.Play();
            
        }
        Freezebar.SetFreeze(currentFreeze);
    }
    

IEnumerator GetInvulnerable()
    {
        currentFreeze = minFreeze;
        Freezebar.SetFreeze(minFreeze);
        spriteRenderer.enabled = true;
        childspriteRenderer.enabled = false;
        Player player = GetComponent<Player>();  
        Physics2D.IgnoreLayerCollision(3, 7, true);
        player.CanMove = false;
        selected = Random.Range(0, Freeze.Count);
        spriteRenderer.sprite = Freeze[selected];
        yield return new WaitForSeconds(3f);
        Physics2D.IgnoreLayerCollision(3, 7, false);
        player.CanMove = true;
        spriteRenderer.sprite = Sprites[0];
        spriteRenderer.enabled = false;
        childspriteRenderer.enabled = true;
    }
}
